<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                        http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">
    <description>Web</description>

	<!--使用 ContextLoaderListener 配置时，告诉它 Spring配置文件的位置-->
	<!--Spring 的核心就是配置文件，可以说配直文件是 Spring 中必不 可少的东西，而这个参数就是使 Web 与 Spring 的配直文件相结合的一个关键配直。-->
	<context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>

	<!-- SpringMVC前端控制器 -->
    <servlet>
        <servlet-name>spring_study</servlet-name>
		<!--：包含了 SpringMVC 的请求逻辑， Spring 使用此类拦截 Web 请求并 进行相应的逻辑处理。-->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>spring_study</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>

	<!--配置上下文载入器，除了DispatcherServlet之外的配置文件，最常见的就是servlet监听器ContextLoaderListener-->
	<!--ContextLoaderListener继承了ServletContextListener,在 ServletContextListener 中的核心逻辑便是初始化 WebApplicationContext 实例并存放至 ServletContext 中。-->
	<listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
</web-app>
